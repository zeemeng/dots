#!/usr/bin/env sh

set -e

if [ "$(uname -s)" != 'Darwin' ] || [ "$(uname -m)" != 'arm64' ]; then
	printf '%s\n' 'ERROR: this bootstrap script only operates on Macs with ARM-based CPUs..' >&2; exit 1
fi

CURRENT_USER="$(whoami)"
printf "Installing Homebrew with user '$CURRENT_USER'. Press ENTER to confirm or type another username and press ENTER to continue: "

read HOMEBREW_USER
case "$HOMEBREW_USER" in
	"" | "$CURRENT_USER") HOMEBREW_USER="$CURRENT_USER";;
	*) printf '%s\n' "Switching as user '$HOMEBREW_USER'"
		id -u "$HOMEBREW_USER" >/dev/null
		su "$HOMEBREW_USER"
esac

HOMEBREW_PREFIX='/opt/homebrew'
HOMEBREW_CACHE="$HOME/Library/Caches/Homebrew"

printf '%s\n' "Validating sudo permissions"
sudo --validate

if [ -d "$HOMEBREW_CACHE" ] || [ -d "$HOMEBREW_PREFIX" ]; then
	printf 'The following dirs will be removed:\n%s\n%s\nAre you sure you want to continue? (y)es / (n)o: ' "$HOMEBREW_PREFIX" "$HOMEBREW_CACHE"
	read RESPONSE
	case "$RESPONSE" in
		Y*|y*) sudo rm -rf "$HOMEBREW_PREFIX" "$HOMEBREW_CACHE";;
		*) printf '%s\n' 'Aborting..' >&2; exit 1;;
	esac
fi

mkdir -p "$HOMEBREW_CACHE"
sudo mkdir -p -m 755 "$HOMEBREW_PREFIX"
sudo chown -R "$HOMEBREW_USER":admin "$HOMEBREW_PREFIX"
sudo --reset-timestamp

git clone 'https://github.com/Homebrew/brew' "$HOMEBREW_PREFIX"
eval "$($HOMEBREW_PREFIX/bin/brew shellenv)"
brew update --force --quiet
chmod -R go-w "$(brew --prefix)/share/zsh"

printf '%s\n' 'Homebrew bootstrapping ALL DONE!'

