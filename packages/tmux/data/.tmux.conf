# As per manpage the value for option "default-terminal" must be set to "screen", "tmux" or a derivative of them.
# Use `-256color` suffix to enable "256 colors" support.
# Use "screen" for better compatibility as GNU screen's terminfo database entry is widely available. However it does not support italics.
# Use "tmux" to enable all capabilities including italics. The "tmux" terminfo database entry should be available on modern systems.
# Note that Tmux terminals do not support all features of the ANSI X3.64 spec (terminal control sequences). Specifically some SGR (Select Graphic Rendition) sequences, notably the subset, OSC (Operating System Command), is not fully implemented. For example, querying OSC 11 to get the background color seems to not be working, causing issues with Vim's ability to auto-detect the terminal background color and to set an appropriate default colorscheme
set -s default-terminal "tmux-256color"

# Set the colors of the status line
set -g status-style bg=colour24 # Alternate syntax: set -g status-bg colour24

# Have tmux set the title of the outside terminal
set -g set-titles on

# Allow programs in the pane to change the title using terminal escape sequences
set -g allow-rename on

# Set the keystroke "C-a" as a prefix key in addition to the default "C-b"
set -g prefix2 C-a

# Send the 'C-a' key input as it to the program within the pane / window when 'C-a' is pressed twice
bind C-a send-prefix -2

# Enable scroll-back using the mouse/trackpad (without explicitly entering copy-mode)
set -g mouse on

# Set more convenient split pane keys
bind < split-window -v
bind > split-window -h

# Switch to previously selected window
bind - last-window

# Kill the current window
bind X kill-window

# Optimize selection of panes according to vim motions
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R

# Have the window IDs renumbered when one of them is removed / closed, so as to maintain consecutive integer IDs.
# Default behaviours is to not renumber window IDs. Therefore, ID gaps will be created if some of existing
# windows are removed.
set -g renumber-windows on

# Set starting index for windows and panes to 1 instead of 0
set -g base-index 1
set -wg pane-base-index 1

# Use vi key bindings at the tmux command prompt
set -g status-keys vi

# Set vi mode-keys for copy-mode
set -g mode-keys vi

# Attempt to set the external clipboard when text is copied
set -s set-clipboard on

# Bind 'v' in copy-mode to start selection in copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection

# Bind 'y' in copy-mode to yank and pipe the selection, then exit copy-mode
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel

# Bind 'Y' in copy-mode to yank and pipe the selection, then exit copy-mode
bind -T copy-mode-vi Y send-keys -X copy-line-and-cancel

# Bind 'P' following the prefix key (as assigned to the default `-T prefix` table) to paste the most recent buffer
bind P paste-buffer

# For WSL / Msys2 systems on Windows. Bind 'y' to yank selection to the Windows clipboard. See ref below.
# https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/clip
# For a more modern approach to handle system clipboard using external tools, see the following ref:
# https://github.com/tmux/tmux/wiki/Clipboard#how-to-configure---tmux-32-and-later
#
#if-shell 'command -v clip.exe' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"'

# Reload config file easily
bind R source-file ~/.tmux.conf \; display-message "source-file done"

